<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="my_robot">
  <!-- Robot constants -->
  <xacro:property name="base_width" value="0.3"/>
  <xacro:property name="base_length" value="0.4"/>
  <xacro:property name="base_height" value="0.1"/>
  <xacro:property name="wheel_radius" value="0.06"/>
  <xacro:property name="wheel_width" value="0.04"/>
  
  <!-- Base link -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="blue">
        <color rgba="0 0 0.8 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="5.0"/>
      <inertia 
        ixx="${1/12 * 5.0 * (base_width*base_width + base_height*base_height)}" 
        ixy="0" ixz="0"
        iyy="${1/12 * 5.0 * (base_length*base_length + base_height*base_height)}" 
        iyz="0"
        izz="${1/12 * 5.0 * (base_length*base_length + base_width*base_width)}"/>
    </inertial>
  </link>
  
  <!-- Wheel macro -->
  <xacro:macro name="wheel" params="prefix x y">
    <link name="${prefix}_wheel">
      <visual>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="black">
          <color rgba="0.1 0.1 0.1 1"/>
        </material>
      </visual>
      <collision>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="0.5"/>
        <inertia 
          ixx="${1/12 * 0.5 * (3*wheel_radius*wheel_radius + wheel_width*wheel_width)}"
          ixy="0" ixz="0"
          iyy="${1/12 * 0.5 * (3*wheel_radius*wheel_radius + wheel_width*wheel_width)}"
          iyz="0"
          izz="${0.5 * wheel_radius*wheel_radius/2}"/>
      </inertial>
    </link>
    
    <joint name="${prefix}_wheel_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_wheel"/>
      <origin xyz="${x} ${y} 0" rpy="${pi/2} 0 0"/>
      <axis xyz="0 0 1"/>
      <dynamics damping="0.1" friction="0.1"/>
    </joint>
  </xacro:macro>
  
  <!-- Use the wheel macro -->
  <xacro:wheel prefix="left" x="0" y="${base_width/2 + wheel_width/2}"/>
  <xacro:wheel prefix="right" x="0" y="-${base_width/2 + wheel_width/2}"/>
  
  <!-- Gazebo plugins -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/my_robot</robotNamespace>
    </plugin>
  </gazebo>
  
  <!-- Add differential drive controller -->
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <leftJoint>left_wheel_joint</leftJoint>
      <rightJoint>right_wheel_joint</rightJoint>
      <wheelSeparation>${base_width + wheel_width}</wheelSeparation>
      <wheelDiameter>${2 * wheel_radius}</wheelDiameter>
      <robotBaseFrame>base_link</robotBaseFrame>
      <publishWheelTF>true</publishWheelTF>
      <publishOdomTF>true</publishOdomTF>
      <publishWheelJointState>true</publishWheelJointState>
      <odometrySource>world</odometrySource>
    </plugin>
  </gazebo>
</robot>