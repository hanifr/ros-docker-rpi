# docker-compose.pi.yml - SIMPLIFIED VERSION - No complex YAML escaping
version: '3.8'

services:
  gazebo-sim:
    build:
      context: .
      dockerfile: Dockerfile.arm64
    container_name: gazebo-pi
    restart: unless-stopped
    environment:
      # ROS 2 Environment Variables
      - ROS_DOMAIN_ID=0
      - RMW_IMPLEMENTATION=rmw_fastrtps_cpp
      - FASTRTPS_DEFAULT_PROFILES_FILE=/workspace/fastrtps_profile.xml
      # Headless Gazebo
      - DISPLAY=
      - GAZEBO_MASTER_URI=http://localhost:11345
      - GAZEBO_MODEL_PATH=/root/.gazebo/models:/workspace/models:/worlds
      # Pi Optimizations
      - GAZEBO_RESOURCE_PATH=/usr/share/gazebo:/worlds
      - PYTHONUNBUFFERED=1
      # ROS 2 Performance Tuning
      - RCUTILS_LOGGING_BUFFERED_STREAM=1
      - RCUTILS_COLORIZED_OUTPUT=0
    volumes:
      # Use ros2_ws for ROS 2
      - ./ros2_ws:/workspace
      - ./models:/root/.gazebo/models  
      - ./worlds:/worlds
      - ./scripts:/scripts
      # Persistent volumes for build artifacts
      - workspace_build:/workspace/build
      - workspace_install:/workspace/install
      - workspace_log:/workspace/log
      # System mounts
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "11345:11345"  # Gazebo Master
      - "9090:9090"    # ROSBridge WebSocket
    networks:
      - gazebo-pi-network
    deploy:
      resources:
        limits:
          memory: 3G     # Pi 4B memory limit
          cpus: '3.5'    # Leave some CPU for system
        reservations:
          memory: 1G
          cpus: '1.0'
    # FIXED: Simple command referencing external script
    command: ["/scripts/start_gazebo_sim.sh"]
    healthcheck:
      test: ["CMD", "bash", "-c", "source /opt/ros/humble/setup.bash && ros2 topic list"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 90s

  web-interface:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: web-ui
    restart: unless-stopped
    ports:
      - "5000:5000"    # Flask web interface
    depends_on:
      - gazebo-sim
    environment:
      - ROS_BRIDGE_URL=ws://gazebo-sim:9090
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
    volumes:
      - ./web_interface:/app
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - gazebo-pi-network
    working_dir: /app
    command: ["python", "app.py"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s

  monitor:
    build:
      context: .
      dockerfile: Dockerfile.monitor
    container_name: pi-monitor
    restart: unless-stopped
    ports:
      - "8000:8000"    # Monitor web interface
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - gazebo-pi-network
    profiles:
      - monitoring  # Only start with: docker-compose --profile monitoring up

networks:
  gazebo-pi-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Persistent volumes for better Pi performance
volumes:
  gazebo_models:
    driver: local
  workspace_build:
    driver: local
  workspace_install:
    driver: local
  workspace_log:
    driver: local