# Dockerfile.web - Fixed for ARM64 build dependencies
FROM python:3.10-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    FLASK_APP=app.py \
    FLASK_ENV=production

# Install system dependencies INCLUDING build tools for ARM64
RUN apt-get update && apt-get install -y \
    curl \
    procps \
    docker.io \
    gcc \
    python3-dev \
    build-essential \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create app directory
WORKDIR /app

# Install web interface dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Copy web interface code (will be created by start_web_interface.sh)
COPY web_interface/ .

# Create health endpoint if app.py doesn't have one
RUN if ! grep -q "/health" app.py 2>/dev/null; then \
        echo "" >> app.py && \
        echo "@app.route('/health')" >> app.py && \
        echo "def health():" >> app.py && \
        echo "    return jsonify({'status': 'healthy'})" >> app.py; \
    fi 2>/dev/null || true

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:5000/health || curl -f http://localhost:5000/ || exit 1

# Run the application
CMD ["python", "app.py"]